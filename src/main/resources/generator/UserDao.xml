<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.testol.dao.UserDao">
  <resultMap id="BaseResultMap" type="cn.com.testol.entity.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="work" jdbcType="VARCHAR" property="work" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <resultMap id="UserClassesDTO" type="cn.com.testol.DTO.UserClassesDTO">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="work" jdbcType="VARCHAR" property="work" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="enter_date" jdbcType="TIMESTAMP" property="enterDate" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, sex, phone, `number`, `role`, `work`, update_date, create_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectByEmail" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where number = #{number}
  </select>
  <select id="selectByPhone" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where phone = #{phone}
  </select>
  <select id="loginByEmail" resultMap="BaseResultMap">
    select u.* from user u,user_password u_p
    where u.number=#{number} and u_p.password=#{password} and u_p.user_id=#{userId}
  </select>
  <select id="loginByPhone" resultMap="BaseResultMap">
    select u.* from user u,user_password u_p
    where u.phone=#{phone} and u_p.password=#{password} and u_p.user_id=#{userId}
  </select>
  <select id="selectByC_id" resultMap="UserClassesDTO">
    select
    u.* , u_c.position , u_c.enter_date
    from user u join user_classes u_c on u.user_id=u_c.user_id
    where  u_c.classes_id=#{classesId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="cn.com.testol.entity.User" useGeneratedKeys="true">
    insert into user (user_name, sex, phone, 
      number, `role`, `work`,
      update_date, create_date
      )
    values (#{userName,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{number,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, #{work,jdbcType=VARCHAR},
      #{updateDate,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="cn.com.testol.entity.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        user_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="role != null">
        `role`,
      </if>
      <if test="work != null">
        `work`,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="work != null">
        #{work,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.testol.entity.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        `role` = #{role,jdbcType=VARCHAR},
      </if>
      <if test="work != null">
        `work` = #{work,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.testol.entity.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      `role` = #{role,jdbcType=VARCHAR},
      `work` = #{work,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP},
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>